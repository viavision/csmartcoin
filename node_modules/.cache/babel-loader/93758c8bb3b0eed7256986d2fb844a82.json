{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/bilal/Downloads/final1/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useContext}from'react';import{AlertCircle,CheckCircle}from'react-feather';import{Text}from'waltor-uikit';import styled,{ThemeContext}from'styled-components';import{useActiveWeb3React}from'../../hooks';import{getBscScanLink}from'../../utils';import{ExternalLink}from'../Shared';import{AutoColumn}from'../Column';import{AutoRow}from'../Row';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RowNoFlex=styled(AutoRow)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex-wrap: nowrap;\\n\"])));export default function TransactionPopup(_ref){var hash=_ref.hash,success=_ref.success,summary=_ref.summary;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var theme=useContext(ThemeContext);return/*#__PURE__*/_jsxs(RowNoFlex,{children:[/*#__PURE__*/_jsx(\"div\",{style:{paddingRight:16},children:success?/*#__PURE__*/_jsx(CheckCircle,{color:theme.colors.success,size:24}):/*#__PURE__*/_jsx(AlertCircle,{color:theme.colors.failure,size:24})}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"8px\",children:[/*#__PURE__*/_jsx(Text,{children:summary!==null&&summary!==void 0?summary:\"Hash: \".concat(hash.slice(0,8),\"...\").concat(hash.slice(58,65))}),chainId&&/*#__PURE__*/_jsx(ExternalLink,{href:getBscScanLink(chainId,hash,'transaction'),children:\"View on bscscan\"})]})]});}","map":{"version":3,"sources":["/home/bilal/Downloads/final1/final/src/components/Popups/TransactionPopup.tsx"],"names":["React","useContext","AlertCircle","CheckCircle","Text","styled","ThemeContext","useActiveWeb3React","getBscScanLink","ExternalLink","AutoColumn","AutoRow","RowNoFlex","TransactionPopup","hash","success","summary","chainId","theme","paddingRight","colors","failure","slice"],"mappings":"6LAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,eAAzC,CACA,OAASC,IAAT,KAAqB,cAArB,CACA,MAAOC,CAAAA,MAAP,EAAiBC,YAAjB,KAAqC,mBAArC,CACA,OAASC,kBAAT,KAAmC,aAAnC,CACA,OAASC,cAAT,KAA+B,aAA/B,CACA,OAASC,YAAT,KAA6B,WAA7B,CACA,OAASC,UAAT,KAA2B,WAA3B,CACA,OAASC,OAAT,KAAwB,QAAxB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGP,MAAM,CAACM,OAAD,CAAT,yFAAf,CAIA,cAAe,SAASE,CAAAA,gBAAT,MAQZ,IAPDC,CAAAA,IAOC,MAPDA,IAOC,CANDC,OAMC,MANDA,OAMC,CALDC,OAKC,MALDA,OAKC,CACD,wBAAoBT,kBAAkB,EAAtC,CAAQU,OAAR,qBAAQA,OAAR,CAEA,GAAMC,CAAAA,KAAK,CAAGjB,UAAU,CAACK,YAAD,CAAxB,CAEA,mBACE,MAAC,SAAD,yBACE,YAAK,KAAK,CAAE,CAAEa,YAAY,CAAE,EAAhB,CAAZ,UACGJ,OAAO,cACN,KAAC,WAAD,EAAa,KAAK,CAAEG,KAAK,CAACE,MAAN,CAAaL,OAAjC,CAA0C,IAAI,CAAE,EAAhD,EADM,cAGN,KAAC,WAAD,EAAa,KAAK,CAAEG,KAAK,CAACE,MAAN,CAAaC,OAAjC,CAA0C,IAAI,CAAE,EAAhD,EAJJ,EADF,cAQE,MAAC,UAAD,EAAY,GAAG,CAAC,KAAhB,wBACE,KAAC,IAAD,WAAOL,OAAP,SAAOA,OAAP,UAAOA,OAAP,iBAA2BF,IAAI,CAACQ,KAAL,CAAW,CAAX,CAAc,CAAd,CAA3B,eAAiDR,IAAI,CAACQ,KAAL,CAAW,EAAX,CAAe,EAAf,CAAjD,GADF,CAEGL,OAAO,eAAI,KAAC,YAAD,EAAc,IAAI,CAAET,cAAc,CAACS,OAAD,CAAUH,IAAV,CAAgB,aAAhB,CAAlC,6BAFd,GARF,GADF,CAeD","sourcesContent":["import React, { useContext } from 'react'\nimport { AlertCircle, CheckCircle } from 'react-feather'\nimport { Text } from 'waltor-uikit'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useActiveWeb3React } from '../../hooks'\nimport { getBscScanLink } from '../../utils'\nimport { ExternalLink } from '../Shared'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`\n\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary,\n}: {\n  hash: string\n  success?: boolean\n  summary?: string\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const theme = useContext(ThemeContext)\n\n  return (\n    <RowNoFlex>\n      <div style={{ paddingRight: 16 }}>\n        {success ? (\n          <CheckCircle color={theme.colors.success} size={24} />\n        ) : (\n          <AlertCircle color={theme.colors.failure} size={24} />\n        )}\n      </div>\n      <AutoColumn gap=\"8px\">\n        <Text>{summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n        {chainId && <ExternalLink href={getBscScanLink(chainId, hash, 'transaction')}>View on bscscan</ExternalLink>}\n      </AutoColumn>\n    </RowNoFlex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}