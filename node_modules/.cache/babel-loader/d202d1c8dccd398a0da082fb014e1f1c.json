{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Program Files (x86)/Ampps/www/swap/new/PanCakeSwapFork-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useMemo}from'react';import{ThemeContext}from'styled-components';import{Button,CardBody,Text}from'waltor-uikit';import CardNav from'components/CardNav';import Question from'components/QuestionHelper';import FullPositionCard from'components/PositionCard';import{useTokenBalancesWithLoadingIndicator}from'state/wallet/hooks';import{StyledInternalLink}from'components/Shared';import{LightCard}from'components/Card';import{RowBetween}from'components/Row';import{AutoColumn}from'components/Column';import Container from'components/Container';import{useActiveWeb3React}from'hooks';import{usePairs}from'data/Reserves';import{toV2LiquidityToken,useTrackedTokenPairs}from'state/user/hooks';import{Dots}from'components/swap/styleds';import useI18n from'hooks/useI18n';import PageHeader from'components/PageHeader';import{Link}from\"react-router-dom\";import AppBody from'../AppBody';export default function Pool(){var theme=useContext(ThemeContext);var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var TranslateString=useI18n();// fetch the user's balances of all tracked V2 LP tokens\nvar trackedTokenPairs=useTrackedTokenPairs();var tokenPairsWithLiquidityTokens=useMemo(function(){return trackedTokenPairs.map(function(tokens){return{liquidityToken:toV2LiquidityToken(tokens),tokens:tokens};});},[trackedTokenPairs]);var liquidityTokens=useMemo(function(){return tokenPairsWithLiquidityTokens.map(function(tpwlt){return tpwlt.liquidityToken;});},[tokenPairsWithLiquidityTokens]);var _useTokenBalancesWith=useTokenBalancesWithLoadingIndicator(account!==null&&account!==void 0?account:undefined,liquidityTokens),_useTokenBalancesWith2=_slicedToArray(_useTokenBalancesWith,2),v2PairsBalances=_useTokenBalancesWith2[0],fetchingV2PairBalances=_useTokenBalancesWith2[1];// fetch the reserves for all V2 pools in which the user has a balance\nvar liquidityTokensWithBalances=useMemo(function(){return tokenPairsWithLiquidityTokens.filter(function(_ref){var _v2PairsBalances$liqu;var liquidityToken=_ref.liquidityToken;return(_v2PairsBalances$liqu=v2PairsBalances[liquidityToken.address])===null||_v2PairsBalances$liqu===void 0?void 0:_v2PairsBalances$liqu.greaterThan('0');});},[tokenPairsWithLiquidityTokens,v2PairsBalances]);var v2Pairs=usePairs(liquidityTokensWithBalances.map(function(_ref2){var tokens=_ref2.tokens;return tokens;}));var v2IsLoading=fetchingV2PairBalances||(v2Pairs===null||v2Pairs===void 0?void 0:v2Pairs.length)<liquidityTokensWithBalances.length||(v2Pairs===null||v2Pairs===void 0?void 0:v2Pairs.some(function(V2Pair){return!V2Pair;}));var allV2PairsWithLiquidity=v2Pairs.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),pair=_ref4[1];return pair;}).filter(function(v2Pair){return Boolean(v2Pair);});return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(CardNav,{activeIndex:1}),/*#__PURE__*/_jsxs(AppBody,{children:[/*#__PURE__*/_jsx(PageHeader,{title:TranslateString(262,'Liquidity'),description:TranslateString(1168,'Add liquidity to receive LP tokens'),children:/*#__PURE__*/_jsx(Button,{id:\"join-pool-button\",as:Link,to:\"/add/BNB\",mb:\"16px\",children:TranslateString(168,'Add Liquidity')})}),/*#__PURE__*/_jsx(AutoColumn,{gap:\"lg\",justify:\"center\",children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"12px\",style:{width:'100%'},children:[/*#__PURE__*/_jsxs(RowBetween,{padding:\"0 8px\",children:[/*#__PURE__*/_jsx(Text,{color:theme.colors.text,children:TranslateString(107,'Your Liquidity')}),/*#__PURE__*/_jsx(Question,{text:TranslateString(1170,'When you add liquidity, you are given pool tokens that represent your share. If you donâ€™t see a pool you joined in this list, try importing a pool below.')})]}),!account?/*#__PURE__*/_jsx(LightCard,{padding:\"40px\",children:/*#__PURE__*/_jsx(Text,{color:\"textDisabled\",textAlign:\"center\",children:TranslateString(156,'Connect to a wallet to view your liquidity.')})}):v2IsLoading?/*#__PURE__*/_jsx(LightCard,{padding:\"40px\",children:/*#__PURE__*/_jsx(Text,{color:\"textDisabled\",textAlign:\"center\",children:/*#__PURE__*/_jsx(Dots,{children:\"Loading\"})})}):(allV2PairsWithLiquidity===null||allV2PairsWithLiquidity===void 0?void 0:allV2PairsWithLiquidity.length)>0?/*#__PURE__*/_jsx(_Fragment,{children:allV2PairsWithLiquidity.map(function(v2Pair){return/*#__PURE__*/_jsx(FullPositionCard,{pair:v2Pair},v2Pair.liquidityToken.address);})}):/*#__PURE__*/_jsx(LightCard,{padding:\"40px\",children:/*#__PURE__*/_jsx(Text,{color:\"textDisabled\",textAlign:\"center\",children:TranslateString(104,'No liquidity found.')})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"14px\",style:{padding:'.5rem 0 .5rem 0'},children:[TranslateString(106,\"Don't see a pool you joined?\"),' ',/*#__PURE__*/_jsx(StyledInternalLink,{id:\"import-pool-link\",to:\"/find\",children:TranslateString(108,'Import it.')})]}),/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",style:{padding:'.5rem 0 .5rem 0'},children:TranslateString(1172,'Or, if you staked your LP tokens in a farm, unstake them to see them here.')})]})]})})})]})]});}","map":{"version":3,"sources":["C:/Program Files (x86)/Ampps/www/swap/new/PanCakeSwapFork-main/src/pages/Pool/index.tsx"],"names":["React","useContext","useMemo","ThemeContext","Button","CardBody","Text","CardNav","Question","FullPositionCard","useTokenBalancesWithLoadingIndicator","StyledInternalLink","LightCard","RowBetween","AutoColumn","Container","useActiveWeb3React","usePairs","toV2LiquidityToken","useTrackedTokenPairs","Dots","useI18n","PageHeader","Link","AppBody","Pool","theme","account","TranslateString","trackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","liquidityToken","liquidityTokens","tpwlt","undefined","v2PairsBalances","fetchingV2PairBalances","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","pair","v2Pair","Boolean","width","colors","text","padding"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Pair } from '@pancakeswap-libs/sdk'\nimport {Button, CardBody, Text} from 'waltor-uikit'\nimport CardNav from 'components/CardNav'\nimport Question from 'components/QuestionHelper'\nimport FullPositionCard from 'components/PositionCard'\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\nimport { StyledInternalLink } from 'components/Shared'\nimport { LightCard } from 'components/Card'\nimport { RowBetween } from 'components/Row'\nimport { AutoColumn } from 'components/Column'\nimport Container from 'components/Container'\n\nimport { useActiveWeb3React } from 'hooks'\nimport { usePairs } from 'data/Reserves'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks'\nimport { Dots } from 'components/swap/styleds'\nimport useI18n from 'hooks/useI18n'\nimport PageHeader from 'components/PageHeader'\nimport {Link} from \"react-router-dom\";\nimport AppBody from '../AppBody'\n\nexport default function Pool() {\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n  const TranslateString = useI18n()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken), [\n    tokenPairsWithLiquidityTokens,\n  ])\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  return (\n    <Container>\n      <CardNav activeIndex={1} />\n      <AppBody>\n        <PageHeader\n          title={TranslateString(262, 'Liquidity')}\n          description={TranslateString(1168, 'Add liquidity to receive LP tokens')}\n        >\n          <Button id=\"join-pool-button\" as={Link} to=\"/add/BNB\" mb=\"16px\">\n            {TranslateString(168, 'Add Liquidity')}\n          </Button>\n        </PageHeader>\n        <AutoColumn gap=\"lg\" justify=\"center\">\n          <CardBody>\n            <AutoColumn gap=\"12px\" style={{ width: '100%' }}>\n              <RowBetween padding=\"0 8px\">\n                <Text color={theme.colors.text}>{TranslateString(107, 'Your Liquidity')}</Text>\n                <Question\n                  text={TranslateString(\n                    1170,\n                    'When you add liquidity, you are given pool tokens that represent your share. If you donâ€™t see a pool you joined in this list, try importing a pool below.'\n                  )}\n                />\n              </RowBetween>\n\n              {!account ? (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    {TranslateString(156, 'Connect to a wallet to view your liquidity.')}\n                  </Text>\n                </LightCard>\n              ) : v2IsLoading ? (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    <Dots>Loading</Dots>\n                  </Text>\n                </LightCard>\n              ) : allV2PairsWithLiquidity?.length > 0 ? (\n                <>\n                  {allV2PairsWithLiquidity.map((v2Pair) => (\n                    <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                  ))}\n                </>\n              ) : (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    {TranslateString(104, 'No liquidity found.')}\n                  </Text>\n                </LightCard>\n              )}\n\n              <div>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\n                  {TranslateString(106, \"Don't see a pool you joined?\")}{' '}\n                  <StyledInternalLink id=\"import-pool-link\" to=\"/find\">\n                    {TranslateString(108, 'Import it.')}\n                  </StyledInternalLink>\n                </Text>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\n                  {TranslateString(1172, 'Or, if you staked your LP tokens in a farm, unstake them to see them here.')}\n                </Text>\n              </div>\n            </AutoColumn>\n          </CardBody>\n        </AutoColumn>\n      </AppBody>\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}