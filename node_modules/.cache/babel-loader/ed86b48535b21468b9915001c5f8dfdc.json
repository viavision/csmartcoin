{"ast":null,"code":"import _regeneratorRuntime from\"/home/bilal/Downloads/final1/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/bilal/Downloads/final1/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/bilal/Downloads/final1/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/bilal/Downloads/final1/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{JSBI,Percent,Router,TradeType}from'@pancakeswap-libs/sdk';import{useMemo}from'react';import{BIPS_BASE,DEFAULT_DEADLINE_FROM_NOW,INITIAL_ALLOWED_SLIPPAGE}from'../constants';import{useTransactionAdder}from'../state/transactions/hooks';import{calculateGasMargin,getRouterContract,isAddress,shortenAddress}from'../utils';import isZero from'../utils/isZero';import{useActiveWeb3React}from'./index';import useENS from'./useENS';var SwapCallbackState;(function(SwapCallbackState){SwapCallbackState[SwapCallbackState[\"INVALID\"]=0]=\"INVALID\";SwapCallbackState[SwapCallbackState[\"LOADING\"]=1]=\"LOADING\";SwapCallbackState[SwapCallbackState[\"VALID\"]=2]=\"VALID\";})(SwapCallbackState||(SwapCallbackState={}));/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param deadline the deadline for the trade\n * @param recipientAddressOrName\n */function useSwapCallArguments(trade){var allowedSlippage=arguments.length>1&&arguments[1]!==undefined?arguments[1]:INITIAL_ALLOWED_SLIPPAGE;var deadline=arguments.length>2&&arguments[2]!==undefined?arguments[2]:DEFAULT_DEADLINE_FROM_NOW;var// in seconds from now\nrecipientAddressOrName=arguments.length>3?arguments[3]:undefined;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId,library=_useActiveWeb3React.library;var _useENS=useENS(recipientAddressOrName),recipientAddress=_useENS.address;var recipient=recipientAddressOrName===null?account:recipientAddress;return useMemo(function(){if(!trade||!recipient||!library||!account||!chainId)return[];var contract=getRouterContract(chainId,library,account);if(!contract){return[];}var swapMethods=[];swapMethods.push(// @ts-ignore\nRouter.swapCallParameters(trade,{feeOnTransfer:false,allowedSlippage:new Percent(JSBI.BigInt(Math.floor(allowedSlippage)),BIPS_BASE),recipient:recipient,ttl:deadline}));if(trade.tradeType===TradeType.EXACT_INPUT){swapMethods.push(// @ts-ignore\nRouter.swapCallParameters(trade,{feeOnTransfer:true,allowedSlippage:new Percent(JSBI.BigInt(Math.floor(allowedSlippage)),BIPS_BASE),recipient:recipient,ttl:deadline}));}return swapMethods.map(function(parameters){return{parameters:parameters,contract:contract};});},[account,allowedSlippage,chainId,deadline,library,recipient,trade]);}// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(trade){var allowedSlippage=arguments.length>1&&arguments[1]!==undefined?arguments[1]:INITIAL_ALLOWED_SLIPPAGE;var deadline=arguments.length>2&&arguments[2]!==undefined?arguments[2]:DEFAULT_DEADLINE_FROM_NOW;var// in seconds from now\nrecipientAddressOrName=arguments.length>3?arguments[3]:undefined;var _useActiveWeb3React2=useActiveWeb3React(),account=_useActiveWeb3React2.account,chainId=_useActiveWeb3React2.chainId,library=_useActiveWeb3React2.library;var swapCalls=useSwapCallArguments(trade,allowedSlippage,deadline,recipientAddressOrName);var addTransaction=useTransactionAdder();var _useENS2=useENS(recipientAddressOrName),recipientAddress=_useENS2.address;var recipient=recipientAddressOrName===null?account:recipientAddress;return useMemo(function(){if(!trade||!library||!account||!chainId){return{state:SwapCallbackState.INVALID,callback:null,error:'Missing dependencies'};}if(!recipient){if(recipientAddressOrName!==null){return{state:SwapCallbackState.INVALID,callback:null,error:'Invalid recipient'};}return{state:SwapCallbackState.LOADING,callback:null,error:null};}return{state:SwapCallbackState.VALID,callback:function(){var _onSwap=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var estimatedCalls,successfulEstimation,errorCalls,_successfulEstimation,contract,_successfulEstimation2,methodName,args,value,gasEstimate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all(swapCalls.map(function(call){var _contract$estimateGas;var _call$parameters=call.parameters,methodName=_call$parameters.methodName,args=_call$parameters.args,value=_call$parameters.value,contract=call.contract;var options=!value||isZero(value)?{}:{value:value};return(_contract$estimateGas=contract.estimateGas)[methodName].apply(_contract$estimateGas,_toConsumableArray(args).concat([options])).then(function(gasEstimate){return{call:call,gasEstimate:gasEstimate};}).catch(function(gasError){var _contract$callStatic;console.info('Gas estimate failed, trying eth_call to extract error',call);return(_contract$callStatic=contract.callStatic)[methodName].apply(_contract$callStatic,_toConsumableArray(args).concat([options])).then(function(result){console.info('Unexpected successful call after failed estimate gas',call,gasError,result);return{call:call,error:new Error('Unexpected issue with estimating the gas. Please try again.')};}).catch(function(callError){console.info('Call threw error',call,callError);var errorMessage;switch(callError.reason){case'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT':case'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT':errorMessage='This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.';break;default:errorMessage=\"The transaction cannot succeed due to error: \".concat(callError.reason,\". This is probably an issue with one of the tokens you are swapping.\");}return{call:call,error:new Error(errorMessage)};});});}));case 2:estimatedCalls=_context.sent;// a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\nsuccessfulEstimation=estimatedCalls.find(function(el,ix,list){return'gasEstimate'in el&&(ix===list.length-1||'gasEstimate'in list[ix+1]);});if(successfulEstimation){_context.next=9;break;}errorCalls=estimatedCalls.filter(function(call){return'error'in call;});if(!(errorCalls.length>0)){_context.next=8;break;}throw errorCalls[errorCalls.length-1].error;case 8:throw new Error('Unexpected error. Please contact support: none of the calls threw an error');case 9:_successfulEstimation=successfulEstimation.call,contract=_successfulEstimation.contract,_successfulEstimation2=_successfulEstimation.parameters,methodName=_successfulEstimation2.methodName,args=_successfulEstimation2.args,value=_successfulEstimation2.value,gasEstimate=successfulEstimation.gasEstimate;return _context.abrupt(\"return\",contract[methodName].apply(contract,_toConsumableArray(args).concat([_objectSpread({gasLimit:calculateGasMargin(gasEstimate)},value&&!isZero(value)?{value:value,from:account}:{from:account})])).then(function(response){var inputSymbol=trade.inputAmount.currency.symbol;var outputSymbol=trade.outputAmount.currency.symbol;var inputAmount=trade.inputAmount.toSignificant(3);var outputAmount=trade.outputAmount.toSignificant(3);var base=\"Swap \".concat(inputAmount,\" \").concat(inputSymbol,\" for \").concat(outputAmount,\" \").concat(outputSymbol);var withRecipient=recipient===account?base:\"\".concat(base,\" to \").concat(recipientAddressOrName&&isAddress(recipientAddressOrName)?shortenAddress(recipientAddressOrName):recipientAddressOrName);addTransaction(response,{summary:withRecipient});return response.hash;}).catch(function(error){// if the user rejected the tx, pass this along\nif((error===null||error===void 0?void 0:error.code)===4001){throw new Error('Transaction rejected.');}else{// otherwise, the error was unexpected and we need to convey that\nconsole.error(\"Swap failed\",error,methodName,args,value);throw new Error(\"Swap failed: \".concat(error.message));}}));case 11:case\"end\":return _context.stop();}}},_callee);}));function onSwap(){return _onSwap.apply(this,arguments);}return onSwap;}(),error:null};},[trade,library,account,chainId,recipient,recipientAddressOrName,swapCalls,addTransaction]);}export default useSwapCallback;","map":{"version":3,"sources":["/home/bilal/Downloads/final1/final/src/hooks/useSwapCallback.ts"],"names":["JSBI","Percent","Router","TradeType","useMemo","BIPS_BASE","DEFAULT_DEADLINE_FROM_NOW","INITIAL_ALLOWED_SLIPPAGE","useTransactionAdder","calculateGasMargin","getRouterContract","isAddress","shortenAddress","isZero","useActiveWeb3React","useENS","SwapCallbackState","useSwapCallArguments","trade","allowedSlippage","deadline","recipientAddressOrName","account","chainId","library","recipientAddress","address","recipient","contract","swapMethods","push","swapCallParameters","feeOnTransfer","BigInt","Math","floor","ttl","tradeType","EXACT_INPUT","map","parameters","useSwapCallback","swapCalls","addTransaction","state","INVALID","callback","error","LOADING","VALID","Promise","all","call","methodName","args","value","options","estimateGas","then","gasEstimate","catch","gasError","console","info","callStatic","result","Error","callError","errorMessage","reason","estimatedCalls","successfulEstimation","find","el","ix","list","length","errorCalls","filter","gasLimit","from","response","inputSymbol","inputAmount","currency","symbol","outputSymbol","outputAmount","toSignificant","base","withRecipient","summary","hash","code","message","onSwap"],"mappings":"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","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap-libs/sdk'\nimport { useMemo } from 'react'\nimport { BIPS_BASE, DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport { useActiveWeb3React } from './index'\nimport useENS from './useENS'\n\n enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param deadline the deadline for the trade\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  deadline: number = DEFAULT_DEADLINE_FROM_NOW, // in seconds from now\n  recipientAddressOrName: string | null // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      // @ts-ignore\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(Math.floor(allowedSlippage)), BIPS_BASE),\n        recipient,\n        ttl: deadline,\n      })\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        // @ts-ignore\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(Math.floor(allowedSlippage)), BIPS_BASE),\n          recipient,\n          ttl: deadline,\n        })\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  deadline: number = DEFAULT_DEADLINE_FROM_NOW, // in seconds from now\n  recipientAddressOrName: string | null // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, deadline, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.info('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.info('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.info('Call threw error', call, callError)\n                    let errorMessage: string\n                    switch (callError.reason) {\n                      case 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT':\n                      case 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT':\n                        errorMessage =\n                          'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.'\n                        break\n                      default:\n                        errorMessage = `The transaction cannot succeed due to error: ${callError.reason}. This is probably an issue with one of the tokens you are swapping.`\n                    }\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          })\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1])\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n\nexport default useSwapCallback"]},"metadata":{},"sourceType":"module"}