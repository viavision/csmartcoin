{"ast":null,"code":"import _defineProperty from\"C:/Program Files (x86)/Ampps/www/swap/new/PanCakeSwapFork-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _process$env$REACT_AP,_connectorsByName;import{ConnectorNames}from'waltor-uikit';import{Web3Provider}from'@ethersproject/providers';import{InjectedConnector}from'@web3-react/injected-connector';import{WalletConnectConnector}from'@web3-react/walletconnect-connector';import{WalletLinkConnector}from'@web3-react/walletlink-connector';import{BscConnector}from'@binance-chain/bsc-connector';import{NetworkConnector}from'./NetworkConnector';var NETWORK_URL=process.env.REACT_APP_NETWORK_URL;export var NETWORK_CHAIN_ID=parseInt((_process$env$REACT_AP=process.env.REACT_APP_CHAIN_ID)!==null&&_process$env$REACT_AP!==void 0?_process$env$REACT_AP:'56');if(typeof NETWORK_URL==='undefined'){throw new Error(\"REACT_APP_NETWORK_URL must be a defined environment variable\");}export var network=new NetworkConnector({urls:_defineProperty({},NETWORK_CHAIN_ID,NETWORK_URL)});var networkLibrary;export function getNetworkLibrary(){var _networkLibrary;// eslint-disable-next-line no-return-assign\nreturn networkLibrary=(_networkLibrary=networkLibrary)!==null&&_networkLibrary!==void 0?_networkLibrary:new Web3Provider(network.provider);}export var injected=new InjectedConnector({supportedChainIds:[56,97]});export var bscConnector=new BscConnector({supportedChainIds:[56]});// mainnet only\nexport var walletconnect=new WalletConnectConnector({rpc:_defineProperty({},NETWORK_CHAIN_ID,NETWORK_URL),bridge:'https://bridge.walletconnect.org',qrcode:true,pollingInterval:15000});// mainnet only\nexport var walletlink=new WalletLinkConnector({url:NETWORK_URL,appName:'Uniswap',appLogoUrl:'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg'});export var connectorsByName=(_connectorsByName={},_defineProperty(_connectorsByName,ConnectorNames.Injected,injected),_defineProperty(_connectorsByName,ConnectorNames.WalletConnect,walletconnect),_defineProperty(_connectorsByName,ConnectorNames.BSC,bscConnector),_connectorsByName);","map":{"version":3,"sources":["C:/Program Files (x86)/Ampps/www/swap/new/PanCakeSwapFork-main/src/connectors/index.ts"],"names":["ConnectorNames","Web3Provider","InjectedConnector","WalletConnectConnector","WalletLinkConnector","BscConnector","NetworkConnector","NETWORK_URL","process","env","REACT_APP_NETWORK_URL","NETWORK_CHAIN_ID","parseInt","REACT_APP_CHAIN_ID","Error","network","urls","networkLibrary","getNetworkLibrary","provider","injected","supportedChainIds","bscConnector","walletconnect","rpc","bridge","qrcode","pollingInterval","walletlink","url","appName","appLogoUrl","connectorsByName","Injected","WalletConnect","BSC"],"mappings":"mOAAA,OAASA,cAAT,KAA+B,cAA/B,CACA,OAASC,YAAT,KAA6B,0BAA7B,CACA,OAASC,iBAAT,KAAkC,gCAAlC,CACA,OAASC,sBAAT,KAAuC,qCAAvC,CACA,OAASC,mBAAT,KAAoC,kCAApC,CACA,OAASC,YAAT,KAA6B,8BAA7B,CACA,OAASC,gBAAT,KAAiC,oBAAjC,CAEA,GAAMC,CAAAA,WAAW,CAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAhC,CAEA,MAAO,IAAMC,CAAAA,gBAAwB,CAAGC,QAAQ,wBAACJ,OAAO,CAACC,GAAR,CAAYI,kBAAb,+DAAmC,IAAnC,CAAzC,CAEP,GAAI,MAAON,CAAAA,WAAP,GAAuB,WAA3B,CAAwC,CACtC,KAAM,IAAIO,CAAAA,KAAJ,gEAAN,CACD,CAED,MAAO,IAAMC,CAAAA,OAAO,CAAG,GAAIT,CAAAA,gBAAJ,CAAqB,CAC1CU,IAAI,oBAAKL,gBAAL,CAAwBJ,WAAxB,CADsC,CAArB,CAAhB,CAIP,GAAIU,CAAAA,cAAJ,CACA,MAAO,SAASC,CAAAA,iBAAT,EAA2C,qBAChD;AACA,MAAQD,CAAAA,cAAc,kBAAGA,cAAH,mDAAqB,GAAIhB,CAAAA,YAAJ,CAAiBc,OAAO,CAACI,QAAzB,CAA3C,CACD,CAED,MAAO,IAAMC,CAAAA,QAAQ,CAAG,GAAIlB,CAAAA,iBAAJ,CAAsB,CAC5CmB,iBAAiB,CAAE,CAAC,EAAD,CAAK,EAAL,CADyB,CAAtB,CAAjB,CAIP,MAAO,IAAMC,CAAAA,YAAY,CAAG,GAAIjB,CAAAA,YAAJ,CAAiB,CAAEgB,iBAAiB,CAAE,CAAC,EAAD,CAArB,CAAjB,CAArB,CAEP;AACA,MAAO,IAAME,CAAAA,aAAa,CAAG,GAAIpB,CAAAA,sBAAJ,CAA2B,CACtDqB,GAAG,oBAAKb,gBAAL,CAAwBJ,WAAxB,CADmD,CAEtDkB,MAAM,CAAE,kCAF8C,CAGtDC,MAAM,CAAE,IAH8C,CAItDC,eAAe,CAAE,KAJqC,CAA3B,CAAtB,CAOP;AACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,GAAIxB,CAAAA,mBAAJ,CAAwB,CAChDyB,GAAG,CAAEtB,WAD2C,CAEhDuB,OAAO,CAAE,SAFuC,CAGhDC,UAAU,CACR,yKAJ8C,CAAxB,CAAnB,CAOP,MAAO,IAAMC,CAAAA,gBAA4D,yDACtEhC,cAAc,CAACiC,QADuD,CAC5Cb,QAD4C,oCAEtEpB,cAAc,CAACkC,aAFuD,CAEvCX,aAFuC,oCAGtEvB,cAAc,CAACmC,GAHuD,CAGjDb,YAHiD,oBAAlE","sourcesContent":["import { ConnectorNames } from 'waltor-uikit'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { NetworkConnector } from './NetworkConnector'\n\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL\n\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '56')\n\nif (typeof NETWORK_URL === 'undefined') {\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`)\n}\n\nexport const network = new NetworkConnector({\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n})\n\nlet networkLibrary: Web3Provider | undefined\nexport function getNetworkLibrary(): Web3Provider {\n  // eslint-disable-next-line no-return-assign\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any))\n}\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [56, 97],\n})\n\nexport const bscConnector = new BscConnector({ supportedChainIds: [56] })\n\n// mainnet only\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: 15000,\n})\n\n// mainnet only\nexport const walletlink = new WalletLinkConnector({\n  url: NETWORK_URL,\n  appName: 'Uniswap',\n  appLogoUrl:\n    'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg',\n})\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n"]},"metadata":{},"sourceType":"module"}