{"ast":null,"code":"/* eslint-disable no-param-reassign */import{createSlice}from'@reduxjs/toolkit';var initialState={data:[]};export var toastsSlice=createSlice({name:'toasts',initialState:initialState,reducers:{push:function push(state,action){var payload=action.payload;var toastIndex=state.data.findIndex(function(toast){return toast.id===action.payload.id;});// If id already matches remove it before adding it to the top of the stack\nif(toastIndex>=0){state.data.splice(toastIndex,1);}state.data.unshift(payload);},remove:function remove(state,action){var toastIndex=state.data.findIndex(function(toast){return toast.id===action.payload;});if(toastIndex>=0){state.data.splice(toastIndex,1);}},clear:function clear(state){state.data=[];}}});// Actions\nvar _toastsSlice$actions=toastsSlice.actions,clear=_toastsSlice$actions.clear,remove=_toastsSlice$actions.remove,push=_toastsSlice$actions.push;export{clear,remove,push};export default toastsSlice.reducer;","map":{"version":3,"sources":["/home/bilal/Downloads/final1/final/src/state/toasts/index.ts"],"names":["createSlice","initialState","data","toastsSlice","name","reducers","push","state","action","payload","toastIndex","findIndex","toast","id","splice","unshift","remove","clear","actions","reducer"],"mappings":"AAAA,sCAEA,OAASA,WAAT,KAA2C,kBAA3C,CAEA,GAAMC,CAAAA,YAAyB,CAAG,CAChCC,IAAI,CAAE,EAD0B,CAAlC,CAQA,MAAO,IAAMC,CAAAA,WAAW,CAAGH,WAAW,CAAC,CACrCI,IAAI,CAAE,QAD+B,CAErCH,YAAY,CAAZA,YAFqC,CAGrCI,QAAQ,CAAE,CACRC,IAAI,CAAE,cAACC,KAAD,CAAqBC,MAArB,CAAsD,CAC1D,GAAQC,CAAAA,OAAR,CAAoBD,MAApB,CAAQC,OAAR,CACA,GAAMC,CAAAA,UAAU,CAAGH,KAAK,CAACL,IAAN,CAAWS,SAAX,CAAqB,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,EAAN,GAAaL,MAAM,CAACC,OAAP,CAAeI,EAAvC,EAArB,CAAnB,CAEA;AACA,GAAIH,UAAU,EAAI,CAAlB,CAAqB,CACnBH,KAAK,CAACL,IAAN,CAAWY,MAAX,CAAkBJ,UAAlB,CAA8B,CAA9B,EACD,CAEDH,KAAK,CAACL,IAAN,CAAWa,OAAX,CAAmBN,OAAnB,EACD,CAXO,CAYRO,MAAM,CAAE,gBAACT,KAAD,CAAqBC,MAArB,CAAuD,CAC7D,GAAME,CAAAA,UAAU,CAAGH,KAAK,CAACL,IAAN,CAAWS,SAAX,CAAqB,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,EAAN,GAAaL,MAAM,CAACC,OAA/B,EAArB,CAAnB,CAEA,GAAIC,UAAU,EAAI,CAAlB,CAAqB,CACnBH,KAAK,CAACL,IAAN,CAAWY,MAAX,CAAkBJ,UAAlB,CAA8B,CAA9B,EACD,CACF,CAlBO,CAmBRO,KAAK,CAAE,eAACV,KAAD,CAAwB,CAC7BA,KAAK,CAACL,IAAN,CAAa,EAAb,CACD,CArBO,CAH2B,CAAD,CAA/B,CA4BP;AACO,yBAAgCC,WAAW,CAACe,OAA5C,CAAQD,KAAR,sBAAQA,KAAR,CAAeD,MAAf,sBAAeA,MAAf,CAAuBV,IAAvB,sBAAuBA,IAAvB,C,0BAEP,cAAeH,CAAAA,WAAW,CAACgB,OAA3B","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { Toast } from 'waltor-uikit'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nconst initialState: ToastsState = {\n  data: [],\n}\n\nexport interface ToastsState {\n  data: Toast[]\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state: ToastsState) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n"]},"metadata":{},"sourceType":"module"}